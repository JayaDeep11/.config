
ZSH=/usr/share/oh-my-zsh/

# Path to powerlevel10k theme
#source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme

# List of plugins used
plugins=()
source $ZSH/oh-my-zsh.sh

# In case a command is not found, try to find the package that has it
function command_not_found_handler {
    local purple='\e[1;35m' bright='\e[0;1m' green='\e[1;32m' reset='\e[0m'
    printf 'zsh: command not found: %s\n' "$1"
    local entries=( ${(f)"$(/usr/bin/pacman -F --machinereadable -- "/usr/bin/$1")"} )
    if (( ${#entries[@]} )) ; then
        printf "${bright}$1${reset} may be found in the following packages:\n"
        local pkg
        for entry in "${entries[@]}" ; do
            local fields=( ${(0)entry} )
            if [[ "$pkg" != "${fields[2]}" ]] ; then
                printf "${purple}%s/${bright}%s ${green}%s${reset}\n" "${fields[1]}" "${fields[2]}" "${fields[3]}"
            fi
            printf '    /%s\n' "${fields[4]}"
            pkg="${fields[2]}"
        done
    fi
    return 127
}

# Detect the AUR wrapper
if pacman -Qi yay &>/dev/null ; then
   aurhelper="yay"
elif pacman -Qi paru &>/dev/null ; then
   aurhelper="paru"
fi
function in {
    local pkg="$1"
    if pacman -Si "$pkg" &>/dev/null ; then
        sudo pacman -S "$pkg"
    else
        "$aurhelper" -S "$pkg"
    fi
}


# alias for my personal

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -100' ;;
    *)            fzf "$@" ;;
  esac
}

ff(){
    $1 "$(fzf)"
}


nf(){
    nvim "$(find * -type f | fzf --preview 'bat --style=numbers --color=always --line-range :500 {}')"
}

pdf(){
    zaread "$(fzf --query .pdf$)"
}

ppt(){
    zaread "$(fzf --query .pptx$)"
}


##   for fzf END -- #

github(){
    google-chrome-stable github.com/$1
}

gvpit(){
    google-chrome-stable https://www.gvpce.ac.in/itbtechcoustu20-21.html
}

wha(){
    google-chrome-stable https://web.whatsapp.com/
}

yt(){
    ytfzf
}

capa(){
    google-chrome-stable https://app.capacities.io/
}

notion(){
    google-chrome-stable https://www.notion.so/
}

wiki(){
    google-chrome-stable en.wikipedia.org/wiki/
}

anime(){
    ani-cli
}

timer(){
    termdown $1
}


ob(){
    ./applications/obsidian/squashfs-root/AppRun
}


# for cpp

ccp(){
    g++ $1 -o a
}

a(){
    ./a
}



# fronted
hr(){
    google-chrome-stable "$(fzf -q .html$)"
}

# git cmds
ghj(){
    google-chrome-stable github.com/jayadeep11
}


ghn(){
    google-chrome-stable github.com/new
}

gc(){
  git clone $1
}

gacp(){
  git add .;git commit -m $1;git push;
}
 

gac(){
  git add .;git commit -m $1;
}




# websites
leet(){
    google-chrome-stable https://leetcode.com/problemset/all/$1
}

potd(){
    google-chrome-stable https://www.geeksforgeeks.org/problem-of-the-day
}

red(){
    google-chrome-stable https://www.reddit.com/
}


# mail

alias cmail="chromium https://mail.google.com/mail/u/0/#inbox"
alias jmail="chromium https://mail.google.com/mail/u/1/#inbox"


## -- end alias -- ##

# ollama
alias cg="ollama run codellama"

gt(){
    grep "$1" $2
}

getcolor(){
    yad --color | xclip -sel clip -i
}


hstart(){
    Hyprland
}


# tmux commands

t(){
    tmux
}

ta(){
    tmux attach-session -t $1
}

tn(){
    tmux new-session -t $1
}

tl(){
  tmux ls
}


imcat(){
    kitty +kitten icat $1
}


# kde commands

sharep(){
    kdeconnect-cli -d $(kdeconnect-cli -a --id-only) --share $1
}


# browser
meta(){
    google-chrome-stable https://www.coursera.org/
}







# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
#[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


eval "$(starship init zsh)"
eval "$(zoxide init zsh)"

# Helpful aliases
alias  l='eza -lh  --icons=auto' # long list
alias ll='eza -lha --icons=auto --sort=name --group-directories-first' # long list all
alias ld='eza -lhD --icons=auto' # long list dirs
alias un='$aurhelper -Rns' # uninstall package
alias up='$aurhelper -Syu' # update system/package/aur
alias pl='$aurhelper -Qs' # list installed package
alias pa='$aurhelper -Ss' # list availabe package
alias pc='$aurhelper -Sc' # remove unused cache
alias po='$aurhelper -Qtdq | $aurhelper -Rns -' # remove unused packages, also try > $aurhelper -Qqd | $aurhelper -Rsu --print -
alias vc='code' # gui code editor

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
#[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#Display Pokemon
#pokemon-colorscripts --no-title -r 1,3,6


